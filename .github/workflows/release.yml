name: Build Releases

permissions:
  contents: write

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-11, windows-latest]
        cabal: ["3.10.2.1"]
        ghc:
          - "9.4.8"
        exe_suffix: [x86_64-ubuntu, x86_64-macos, x86_64-windows]

    steps:
    - uses: actions/checkout@v2

    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    # - name: Configure
    #   run: |
    #     cabal configure --enable-tests --enable-benchmarks --enable-documentation --test-show-details=direct --write-ghc-environment-files=always

    # - name: Freeze
    #   run: |
    #     cabal freeze

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Install dependencies
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: |
        cabal build all

    - name: Archive
      run: |
        cp $(cabal list-bin . | head -n 1) . && tar -cvzf anki-panky-${{ github.ref_name }}-${{ matrix.exe_suffix }}.tar.gz anki-panky

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: anki-panky-${{ github.ref_name }}-${{ matrix.exe_suffix }}.tar.gz
